<?php

/**
 * @file
 *   (Un)installs the Rules Activity Logging module.
 */

/**
 * Implementation of hook_schema().
 */
function activity_log_schema() {
  $schema = array();
  $schema['activity_log_templates'] = array(
    'description' => 'Stores log templates.',
    'fields' => array(
      'tid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'The template ID.',
      ),
      'rule' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'The rule with which this template is associated.',
      ),
      'template' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'The template.',
      ),
      'stream_owner_id_template' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Something which, when evaluated, returns the ID of the entity in whose stream messages using this template will appear.',
      ),
      'pid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => 'The public name ID.',
      ),
      'eval_input' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'An array of the input evaluators to run over the template.',
      ),
    ),
    'primary key' => array('tid'),
  );
  $schema['activity_log_events'] = array(
    'description' => 'Stores activity records.',
    'fields' => array(
      'aid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'The activity ID.',
      ),
      'tid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => 'The template ID.',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => 'The time the activity occurred.',
      ),
      'stream_owner_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The ID of the entity in whose stream this record should appear.',
      ),
      'stream_owner_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type of the stream owner.',
      ),
      'id_map' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Data used to generate tokens to interpret the message.',
      ),
    ),
    'indexes' => array(
      'created' => array('created'),
    ),
    'primary key' => array('aid'),
  );
  $schema['activity_log_disabled_types'] = array(
    'description' => 'Stores log templates.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The ID of the user who disabled this type.',
      ),
      'pid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The activity type the user does not want included in their stream.',
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );
  $schema['activity_log_action_names'] = array(
    'description' => 'Stores activity records.',
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'The name ID.',
      ),
      'public_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'The title of the activity type that is shown to users who have the option to enable/disable activity types.',
      ),
    ),
    'unique keys' => array(
      'public_name' => array('public_name'),
    ),
    'primary key' => array('pid'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function activity_log_install() {
  drupal_install_schema('activity_log');
  drupal_set_message(st('The Rules Activity Log module was successfully installed.') .' '.
    st('To begin recording activity messages, <a href="@rules">create a Rule</a> that executes the "Log Activity" action.', array('@rules' => url('admin/rules/trigger')))
  );
}

/**
 * Implementation of hook_uninstall().
 */
function activity_log_uninstall() {
  drupal_uninstall_schema('activity_log');
  variable_del('activity_log_max_age');
}
